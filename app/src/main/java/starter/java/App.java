/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package starter.java;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Optional;

public class App {
    public static final ZoneId ZONE_KST = ZoneId.of("Asia/Seoul");
    public static final ZoneId ZONE_UTC = ZoneId.of("UTC");

    public static void main(String[] args) {
        // UTC LocalDateTime -> KST ZonedDateTime 변환
        LocalDateTime nowUTC = LocalDateTime.now(ZONE_UTC);
        ZonedDateTime convertedKST = ZonedDateTime.of(nowUTC, ZONE_UTC)
                .withZoneSameInstant(ZONE_KST);
        System.out.println("convertedKST = " + convertedKST);

        // KST ZonedDateTime -> UTC LocalDateTime 변환
        ZonedDateTime nowKST = ZonedDateTime.now(ZONE_KST);
        LocalDateTime convertedUTC = nowKST
                .withZoneSameInstant(ZONE_UTC)
                .toLocalDateTime();
        System.out.println("convertedUTC = " + convertedUTC);

        // timestamp millisecond -> UTC LocalDateTime 변환
        long nowTimestamp = System.currentTimeMillis();
        LocalDateTime timestampUTC = LocalDateTime.ofInstant(Instant.ofEpochMilli(nowTimestamp), ZONE_UTC);
        System.out.println("timestampUTC = " + timestampUTC);

        Optional<String> stringOpt = getString("optional");
        stringOpt.ifPresent(str -> System.out.println("str = " + str));
        System.out.println("stringOpt.isPresent = " + stringOpt.isPresent());
        System.out.println("stringOpt.isEmpty = " + stringOpt.isEmpty());

        String str = getString(null)
                .orElse("orElseGet");
        System.out.println("str = " + str);
    }

    private static Optional<String> getString(String str) {
        return Optional.ofNullable(str);
    }
}
